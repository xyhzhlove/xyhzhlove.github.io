import{_ as s,c as i,o as a,ac as e}from"./chunks/framework.DjPLLJ2S.js";const f=JSON.parse('{"title":"Vitepress 学习","description":"Vitepress的一些记录","frontmatter":{"title":"Vitepress 学习","description":"Vitepress的一些记录","date":"2024-8-24","tags":["笔记"]},"headers":[],"relativePath":"notes/vitepress.md","filePath":"views/notes/vitepress.md"}'),t={name:"notes/vitepress.md"},n=e(`<h2 id="找样式文件" tabindex="-1">找样式文件 <a class="header-anchor" href="#找样式文件" aria-label="Permalink to &quot;找样式文件&quot;">​</a></h2><p>打开控制台，查看页面代码中的 head 中关于 CSS 文件的引用。 例如</p><ul><li>node<em>modules/.pnpm/vitepress@1.3.3</em>@algolia+client-search@5.1.1_search-insights@2.16.3_typescript@5.5.4/node_modules/vitepress/dist/client/theme-default/styles/vars.css&quot;</li><li>node<em>modules/.pnpm/vitepress@1.3.3</em>@algolia+client-search@5.1.1_search-insights@2.16.3_typescript@5.5.4/node_modules/vitepress/dist/client/theme-default/styles/base.css&quot;</li></ul><h2 id="覆盖-css-变量名" tabindex="-1">覆盖 CSS 变量名 <a class="header-anchor" href="#覆盖-css-变量名" aria-label="Permalink to &quot;覆盖 CSS 变量名&quot;">​</a></h2><p>将自定义的 CSS 变量名进行覆盖，即可改变默认样式</p><h3 id="vitepress中config-ts中的配置相关" tabindex="-1">vitepress中config.ts中的配置相关 <a class="header-anchor" href="#vitepress中config-ts中的配置相关" aria-label="Permalink to &quot;vitepress中config.ts中的配置相关&quot;">​</a></h3><p>如果config.ts中的themeConfig配置中书写了defineConfig中的有效配置，那么该配置会发挥它内置的效果 如果config.ts中的themeConfig配置中书写了defineConfig中的无效配置,那么该配置可以通过以下方式访问到</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> useData</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> withBase</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vitepress</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> computed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> theme</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> useData</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 可以从theme.value中拿到自己themeConfig中的自定义配置</span></span></code></pre></div><h2 id="vitepress中的md文件使用全局注解的vue组件" tabindex="-1">vitepress中的md文件使用全局注解的vue组件 <a class="header-anchor" href="#vitepress中的md文件使用全局注解的vue组件" aria-label="Permalink to &quot;vitepress中的md文件使用全局注解的vue组件&quot;">​</a></h2><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Tags组件已经被全局注册</span></span>
<span class="line"><span style="--shiki-light:#1C6B48;--shiki-dark:#4D9375;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">---</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">layout: page</span></span>
<span class="line"><span style="--shiki-light:#1C6B48;--shiki-dark:#4D9375;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Tags</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/&gt;</span></span></code></pre></div><h2 id="页面各类控件的样式控制" tabindex="-1">页面各类控件的样式控制 <a class="header-anchor" href="#页面各类控件的样式控制" aria-label="Permalink to &quot;页面各类控件的样式控制&quot;">​</a></h2><p>可以通过vitepress暴露出来的默认配置，也可以使用CSS类名等样式重写控制</p>`,12),h=[n];function l(p,k,r,d,o,c){return a(),i("div",null,h)}const m=s(t,[["render",l]]);export{f as __pageData,m as default};
